(()=>{"use strict";const e=new BroadcastChannel("aggiornamentoDatabase");var t=function(e,t,o,n){return new(o||(o=Promise))((function(r,i){function c(e){try{l(n.next(e))}catch(e){i(e)}}function a(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(c,a)}l((n=n.apply(e,t||[])).next())}))};let o;const n=document.getElementById("ripristinaCopie");function r(){return t(this,void 0,void 0,(function*(){try{const e=yield function(){return t(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{const n=o.transaction("Copie","readonly").objectStore("Copie").getAll();n.onsuccess=()=>{const t=n.result.filter((e=>"E"===e.stato));e(t)},n.onerror=()=>{t(n.error)}}))}))}(),n=document.getElementById("corpoTabellaCopie");n.innerHTML="";for(let t=0;t<e.length;t++){let r=e[t];const i=yield new Promise(((e,t)=>{const n=o.transaction("Libri","readonly").objectStore("Libri").get(r.libroDellaCopiaISBN);n.onsuccess=()=>{n.result?e(n.result):t(new Error("Libro con ISBN non trovato"))},n.onerror=()=>{t(new Error("Database dei libri non reperibile"))}})),c=document.createElement("tr"),a=document.createElement("td"),l=document.createElement("input");l.setAttribute("type","checkbox"),l.setAttribute("class","caselleSelezione"),a.appendChild(l),c.appendChild(l);const s=document.createElement("td");s.textContent=String(r.codiceUnivoco),c.appendChild(s);const d=document.createElement("td");d.textContent=String(i.isbn),c.appendChild(d);const u=document.createElement("td");u.textContent=i.titolo,c.appendChild(u);const p=document.createElement("td");p.textContent=String(r.prezzoCopertina),c.appendChild(p);const m=document.createElement("td");m.textContent=String(r.prezzoScontato),c.appendChild(m),n.appendChild(c)}}catch(e){e instanceof Error&&console.error(e.message)}}))}null==n||n.addEventListener("click",(function(){return t(this,void 0,void 0,(function*(){const n=document.querySelectorAll('input[type="checkbox"].caselleSelezione:checked');if(0!==n.length){if(window.confirm("Vuoi ripristinare le copie selezionate?"))try{const i=o.transaction("Copie","readwrite").objectStore("Copie"),c=Array.from(n).map((o=>t(this,void 0,void 0,(function*(){var t,n;const r=o.closest("tr");if(r){const o=null===(n=null===(t=r.cells[0])||void 0===t?void 0:t.textContent)||void 0===n?void 0:n.trim();if(o)return new Promise(((t,n)=>{const r=i.get(Number(o));r.onsuccess=()=>{const c=r.result;if(c){c.stato="D";const o=i.put(c);o.onsuccess=()=>{e.postMessage({store:"Copie"}),t()},o.onerror=()=>{n(new Error("Errore nell'aggiornamento dello stato della copia."))}}else n(new Error(`Copia con ID ${o} non trovata nello store 'Copie'.`))},r.onerror=()=>{n(new Error("Errore nel recupero della copia."))}}))}}))));yield Promise.all(c),window.alert("Copia/e ripristinate correttamente."),yield r()}catch(e){e instanceof Error&&console.error(e.message)}}else window.alert("Seleziona almeno una copia da ripristinare")}))})),e.onmessage=e=>t(void 0,void 0,void 0,(function*(){"Copie"===e.data.store&&(console.log("Aggiornamento ricevuto: ricarico copie eliminate..."),location.reload())})),document.addEventListener("DOMContentLoaded",(()=>t(void 0,void 0,void 0,(function*(){try{o=yield function(){let e=new Promise(((e,t)=>{const o=indexedDB.open("Database",1);o.onerror=()=>{t(o.onerror)},o.onsuccess=()=>{const t=o.result;e(t)}}));return e}(),console.log("Database aperto:",o.name),yield r()}catch(e){console.error(e)}}))))})();